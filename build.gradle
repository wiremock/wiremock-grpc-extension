buildscript {
  repositories {
    maven {
      url "https://oss.sonatype.org"
    }
    mavenCentral()
  }
}

plugins {
  id 'eclipse'
  id 'project-report'
  id 'com.diffplug.spotless' version '6.22.0'
  id "com.google.protobuf" version "0.9.4"
  id 'org.wiremock.tools.gradle.wiremock-extension-convention' version '0.1.2'
}

group 'org.wiremock.extensions'

allprojects {

  ext {
    versions = [
      wiremock: "3.3.1",
      grpc    : "1.59.0",
      protobuf: "3.25.0"
    ]
  }
}

spotless {
  java {
    target 'src/**/*.java'
    googleJavaFormat('1.17.0')
    licenseHeaderFile "${rootDir}/gradle/spotless.java.license.txt"
    ratchetFrom 'origin/main'
    trimTrailingWhitespace()
    endWithNewline()
    targetExclude '**/Tmp*.java'
  }
  groovyGradle {
    target '**/*.gradle'
    greclipse()
    indentWithSpaces(2)
    trimTrailingWhitespace()
    endWithNewline()
  }
  json {
    target 'src/**/*.json'
    targetExclude '**/tmp*.json', 'src/test/resources/sample.json', 'src/main/resources/swagger/*.json', 'src/test/resources/filesource/subdir/deepfile.json', 'src/test/resources/schema-validation/*.json'
    simple().indentWithSpaces(2)
  }
}

dependencies {
  api "org.wiremock:wiremock:$versions.wiremock"

  api platform("io.grpc:grpc-bom:$versions.grpc")
  api "io.grpc:grpc-protobuf"
  api "io.grpc:grpc-stub"

  implementation "io.grpc:grpc-servlet-jakarta"
  implementation "com.google.protobuf:protobuf-java-util:$versions.protobuf"

  implementation 'javax.annotation:javax.annotation-api:1.3.2'

  testImplementation "io.grpc:grpc-okhttp"
}

test {
  useJUnitPlatform()
  testLogging {
    events "PASSED", "FAILED", "SKIPPED"
    exceptionFormat "full"
  }
}

task addGitTag {
  doLast {
    println "git tag ${version}".execute().text
    println "git push origin --tags".execute().text
  }
}

task localRelease {
  dependsOn clean, assemble, publishToMavenLocal
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.25.0"
  }

  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$versions.grpc"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        outputSubDir = 'java'
      }
    }

    all().each { task ->
      task.generateDescriptorSet = true
      task.descriptorSetOptions.path = "$projectDir/src/test/resources/wiremock/grpc/services.dsc"
      task.descriptorSetOptions.includeImports = true
      // NOTE: Shadow does not set it
    }
  }
}

processTestResources.dependsOn generateProto
processTestResources.dependsOn generateTestProto

shadowJar {
  relocate "io.grpc", 'wiremock.grpc.io.grpc'
  relocate "io.perfmark", 'wiremock.grpc.io.perfmark'

  relocate "org.mortbay", 'wiremock.org.mortbay'
  relocate "org.eclipse", 'wiremock.org.eclipse'
  relocate "org.codehaus", 'wiremock.org.codehaus'
  relocate "com.google", 'wiremock.com.google'
  relocate "com.google.thirdparty", 'wiremock.com.google.thirdparty'
  relocate "com.fasterxml.jackson", 'wiremock.com.fasterxml.jackson'
  relocate "org.apache", 'wiremock.org.apache'
  relocate "org.xmlunit", 'wiremock.org.xmlunit'
  relocate "org.hamcrest", 'wiremock.org.hamcrest'
  relocate "org.skyscreamer", 'wiremock.org.skyscreamer'
  relocate "org.json", 'wiremock.org.json'
  relocate "net.minidev", 'wiremock.net.minidev'
  relocate "com.jayway", 'wiremock.com.jayway'
  relocate "org.objectweb", 'wiremock.org.objectweb'
  relocate "org.custommonkey", "wiremock.org.custommonkey"
  relocate "net.javacrumbs", "wiremock.net.javacrumbs"
  relocate "net.sf", "wiremock.net.sf"
  relocate "com.github.jknack", "wiremock.com.github.jknack"
  relocate "org.antlr", "wiremock.org.antlr"
  relocate "jakarta.servlet", "wiremock.jakarta.servlet"
  relocate "org.checkerframework", "wiremock.org.checkerframework"
  relocate "org.hamcrest", "wiremock.org.hamcrest"
  relocate "org.slf4j", "wiremock.org.slf4j"
  relocate "joptsimple", "wiremock.joptsimple"
  exclude 'joptsimple/HelpFormatterMessages.properties'
  relocate "org.yaml", "wiremock.org.yaml"
  relocate "com.ethlo", "wiremock.com.ethlo"
  relocate "com.networknt", "wiremock.com.networknt"

  dependencies {
    exclude(dependency('org.slf4j:slf4j-api'))
  }
}
